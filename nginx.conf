worker_processes auto;

events {
    worker_connections 1024;
}

http {
    # Load MIME types for CSS, JS, images, etc.
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    server_tokens off;
    proxy_hide_header X-Powered-By;

    # Rate-limiting zones
    limit_req_zone $binary_remote_addr zone=req_limit_per_sec:10m rate=1r/s;
    limit_req_zone $binary_remote_addr zone=req_limit_per_min:10m rate=60r/m;

    # When a rate limit is exceeded, return 429
    limit_req_status 429;
    error_page 429 /custom_429.html;

    # Add security headers globally
    add_header X-Frame-Options SAMEORIGIN always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy strict-origin-when-cross-origin always;

    # Custom error page for backend issues (if needed)
    error_page 502 /custom_502.html;

    server {
        listen 8080;

        # Serve React Frontend at the root
        location / {
            root /app/static;
            index index.html;
            try_files $uri /index.html;
        }

        # Proxy to App1 (APP)
        location /APP/ {
            limit_req zone=req_limit_per_sec burst=10 nodelay;
            limit_req zone=req_limit_per_min burst=20 nodelay;

            proxy_pass http://127.0.0.1:8001/;

            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";

            # Optional: Adjust timeouts for WebSocket
            proxy_read_timeout 3600;
            proxy_send_timeout 3600;

            # Standard proxy headers
            proxy_set_header Host              $host;
            proxy_set_header X-Real-IP         $remote_addr;
            proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Custom error page location for rate limiting errors
        location = /custom_429.html {
            internal;
            add_header Content-Type application/json;
            return 429 '{"message": "Too Many Requests"}';
        }

        # Custom error page location for backend 502 errors
        location = /custom_502.html {
            internal;
            add_header Content-Type application/json;
            return 502 '{"message": "Bad Request"}';
        }
    }
}